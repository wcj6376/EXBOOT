#!/system/xbin/bash
source exfunction
apk=$AB

function Fby () {
cd &apk
Xzfile apk
clear
echo "正在编译$file,请稍候..."
local name=${file%.*}
[ ! -d $TMP ] && mkdir -p $TMP
$bb rm -rf $TMP/* &> $null
unzip -q $file -d $TMP
cp -rf $TMP/*.dex $apk
rm -rf $TMP/* &> $null

#java -jar $TOOLPATH/jar/baksmali.jar -d /system/framework classes.dex
baskmali -d /system/framework classes.dex -o ${name}_out
$bb rm -r classes.dex &> $null
[ -e ${name}_out ] && echo "编译 $file 成功，请到
$apk/${name}_out 目录下查看修改源码"
echo
read -n1 -t8 -p "请按回车键返回..."
baksmali
}

Hby () {
clear
	cd $apk	
if [ -e /etc/issue ] ;then
out_dir=$(ls -l | grep '^d' | awk '{print $9}')
else
out_dir=$(ls -l | grep '^d' | awk '{print $6}')
fi
	if [[ ! -d $out_dir ]]; then
		echo "无法找到反编译后的文件夹"
		echo "请先编译dex后再运行"
		Fby
	 fi
	local dir=$out_dir
 local name=${dir%_*}
	local outfile=$name.apk
if [ -e ${name}_out ] ;then
       echo "正在回编译${name}_out中,请稍候..."
else
echo "未发现源目录，停止运行"
exit 2
fi
smali ${name}_out/ -o classes.dex
if [ -e classes.dex ] ;then
       echo "编译成功"
echo "原$name.apk自动备份old_$name.apk"
cp -rf $name.apk old_$name.apk
zip -0 -q $outfile classes.dex
rm -r ${name}_out classes.dex
    echo "签名 $outfile ..."
    final_file="signed_$outfile"
    final_file=`echo $final_file | sed -e 's/unsigned/(u)/g'`
    signer $outfile $final_file
[ -e $final_file ] && echo "签名成功"
echo "===================="
ls $final_file
echo "====================="
else
echo "编译失败"
$bb sleep 1
fi
read -t8 -p "按回车键返回..."

}

while :
do
clear
echo "编译dex时需要把apk放到$apk工作目录下"
echo 
echo " -1- 反编译dex"
echo
echo " -2- 回编dex"
echo
echo " -3- 反编译全部"
echo
read -n1 -p "请选择:" bak
clear
 [ -z $bak ] && exit
case $bak in
   1 ) Fby ;;
   2 ) Hby ;;
   3 ) chekapk ;;
   0 ) exit ;;
esac
done
