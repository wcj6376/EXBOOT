#!/system/xbin/bash
#提取system制作卡刷包
source exfunction
echo
echo "创建链接临时工作目录...
警告：如果你的ROM比较大，请自行制作一个足够大的linux.img放在$tool下面，否则空间可能不足！"
sleep 2
$bb mount -o rw,remount /
$bb mount -o loop $tool/linux.img $AB &> /dev/null
cd $AB
$bb rm -rf ./* &> /dev/null
mkdir -p system
chmod -R 777 system
[ -d /mnt/home ] && rm -rf /mnt/home
$bb mkdir -p /mnt/home &> /dev/null
cd $SYSPATH
 if [ -e system.img ] ;then
echo "system.img已经存在，不用提取"
else
cd /
#echo "获取system挂载点"
Sysdev
echo "正在提取system.img，请耐心等待..."
dd if=$dev of=$SYSPATH/system.img
cd $SYSPATH
      if [ -e system.img ] 
      then
      echo "提取system.img成功"
      else
      echo "提取system.img失败，自动退出"
      sleep 3
      exit
      fi
 fi

echo "开始挂载system.img为文件夹..."
 $bb mount -o loop system.img /mnt/home &> /dev/null
echo "正在复制文件，请稍候..."
# $bb cp -rf /mnt/home/* $AB/system/
 $bb ln -sf /mnt/home/* $AB/system/
#$bb mount -o loop $SYSPATH/system.img $AB/system &> /dev/null
#验证是否挂载成功
          if [ -d $AB/system/framework ]
          then
          echo "成功挂载，请修改"
         cd $AB/system
         $bb ls 
          else
          read -t3 -p "挂载失败，按回车键退出..."
          $bb rm -rf $AB/* &> /dev/null
          $bb umount -l $AB &> /dev/null
          exit 0
          fi

echo
#开始生成zip格式刷机包
cd $AB
#创建刷机脚本目录
$bb mkdir -p META-INF/com/google/android &> /dev/null
#复制刷机二进制
$bb cp -rf $tbin/update-binary META-INF/com/google/android/update-binary &> /dev/null
#刷机脚本
read -t10 -p "请将本机updater-script复制到$shell后回车键继续..."
  if [ -e $shell/updater-script ];then
cp -rf $shell/updater-script META-INF/com/google/android/updater-script
  else
cp -rf $shell/emmc-updater-script META-INF/com/google/android/updater-script
  fi
cd /mnt/home
su_path=`find . -name su`
super_path=`find . -iname Superuser.apk`
if [ "$su_path" != "" ] && [ "$super_path" != "" ] ;then
       echo "检测到已经存在$su_path和$super_path跳过该选项"
else
echo "是否进行root操作呢？（y/n）默认n"
read root
if [ "$root" == "y" ] || [ "$root" == "Y" ] ;then
       echo "安装root..."
cp -rf $T/root/su $AB/system/xbin &> /dev/null
cp -rf $T/root/Superuser.apk $AB/system/app/Superuser.apk &> /dev/null
echo "成功 root"
else
echo "不安装,退出root操作"
fi
fi
cd $AB
#检测自定义boot文件
if [ -e $SYSPATH/boot.img ] ;then

$bb cp -rf $SYSPATH/boot.img ./
else
echo "在$SYSPATH未发现可用内核boot.img"
 if [ -e $BOOTPATH/boot.img ] ;then
        $bb cp -rf $BOOTPATH/boot.img ./
 else
 echo "在$BOOTPATH目录也未发现可用boot.img"
 echo "你可将boot.img放置于$SYSPATH或$BOOTPATH任意目录下"
 echo "正在退出，请稍后......"
 sleep 2
 exit
 fi
fi
#打包命令
read -n1 -t5 -p "是否添加/data/app（y/n_默认)" yn
if [ "$yn" == "y" ] || [ "$yn" == "Y" ] ;then
echo "请手动添加软件到$AB/data/app目录..."
echo "注意:部分软件需要lib库文件支持..."
$bb mkdir -p $AB/data/app &> $null
$bb ls 
echo "添加好了请回车键继续..."
read n1
fi
    echo "开始制作卡刷包，请耐心等待..."
#[ -e $update ] && rm -rf $update/* > $null
[ ! -e $update ] && mkdir -p $update > $null
    zip -r -q $update/update.zip ./* &> /dev/null
      if [ -e $update/update.zip ]
      then
      echo "制作update.zip成功,开始进行签名"
      else
      echo "失败，打包update没有成功"
      read -t5 -p "按回车键退出..."
      $bb rm -rf ./* &> /dev/null
      $bb umount $AB &> /dev/null
      exit 1
      fi
    echo "正在签名中..."
cd $update
    $signer update.zip signed-rom.zip &> /dev/null
  if [ -e signed-rom.zip ]
  then
  echo "签名update.zip成功"
  $bb rm -rf update.zip &> /dev/null
  else
  echo "签名失败,请在签名功能中进行重新签名"
  fi

$bb umount /mnt/home &> /dev/null
$bb rm -rf $AB/* &> /dev/null
$bb umount -l $AB &> /dev/null
echo "请到$update目录检测signed-rom.zip刷机包"
sleep 8
